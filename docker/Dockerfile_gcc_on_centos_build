ARG base_centos_image_tag
FROM $base_centos_image_tag
ARG gcc_toolset
ARG is_centos8
RUN export LANG=en_US.UTF-8    \
&& export LC_CTYPE=en_US.UTF-8 \
&& export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/compat
RUN if [[ "$is_centos8" = "true" ]];then                             \
      echo "match $is_centos8" && \
      sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-* \
      && sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*; \
    fi;
RUN if [[ "$is_centos8" = "true" ]];then                         \
      yum install git patch wget which epel-release -y && \
      yum install 'dnf-command(config-manager)' -y     && \
      yum config-manager --set-enabled powertools;        \
    else                                                  \
      yum install git patch wget which epel-release centos-release-scl-rh -y; \
    fi;
RUN yum install -y --enablerepo=epel        \
                ninja-build ragel-devel     \
                gnutls-devel                \
                which sudo                  \
                libffi-devel                \
                readline-devel              \
                ${gcc_toolset}-gcc            \
                ${gcc_toolset}-gcc-c++        \
                ${gcc_toolset}-libasan-devel  \
                ${gcc_toolset}-libubsan-devel \
                ${gcc_toolset}-valgrind-devel \
                libunistring snappy-devel   \
                byacc bison flex libtool    \
                systemtap-sdt-devel         \
                patchelf openssl-devel      \
                cryptopp-devel xz-devel     \
                lksctp-tools-devel          \
                xfsprogs-devel libffi-devel \
                glibc-headers glibc-static  \
                bzip2 bzip2-devel           \
                python3-pip pbzip2          \
                numactl-libs                \
                unzip                       \
                ca-certificates             \
                zlib-devel zlib-static
RUN yum --disablerepo="*" --enablerepo="epel" install -y libidn2-devel \
    && yum clean all
COPY docker/update-alternatives.sh /tmp
RUN  sh /tmp/update-alternatives.sh disable_gcc disable_x86 &&          \
     rm /tmp/update-alternatives.sh
RUN echo 'export PATH=/usr/bin/cmake/bin:$PATH' > /root/.bashrc &&              \
    echo "export DEVTOOL_PATH=/opt/rh/${gcc_toolset}" >> /root/.bashrc &&       \
    echo 'source ${DEVTOOL_PATH}/enable' >> /root/.bashrc &&                    \
    echo 'export CC=${DEVTOOL_PATH}/root/usr/bin/gcc' >> /root/.bashrc &&       \
    echo 'export CXX=${DEVTOOL_PATH}/root/usr/bin/g++' >> /root/.bashrc &&      \
    echo 'export LD_LIBRARY_PATH=/usr/local/lib64' >> /root/.bashrc &&          \
    echo 'export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH' >> /root/.bashrc &&       \
    echo "alias wget='wget --no-check-certificate'" >> /root/.bashrc &&                     \
    echo "alias ll='ls -l'" >> /root/.bashrc

RUN mkdir -p /root/.ssh \
&& echo 'gitlab.mobvista.com,52.79.132.161 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBI3YH1X8/OoaMu7GsCa6bYEFTIim05+qYLzOP0EvMYhQqO5w9AqI7yTbcLJJFUmAZJx5DIYjL1Rh+XfICL+mikM=' \
    > /root/.ssh/known_hosts

COPY docker/config     /root/.ssh/config
COPY docker/pub-deploy /root/.ssh/pub-deploy
RUN chmod 400 /root/.ssh/pub-deploy \
&&  chmod 600 /root/.ssh/known_hosts \
&&  chmod 600 /root/.ssh/config
